@inject SpinnerService spinner
@inject IToastService toaster
@inject ClientService clientService
<div>
    <EditForm Model="client" OnValidSubmit="@Submit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row">
            <div classs="col-6 form-group">
                <label>Client No</label>
                <InputText class="form-control" readonly @bind-Value="client.ClientNo"/>
            </div>
        </div>
        <div class="row">
            <div classs="col-6 form-group">
                <label>Client Name</label>
                <InputText class="form-control" @bind-Value="client.Name" />
            </div>
        </div>
        <div class="mt-4 mb-3">
            <button type="submit" class="btn btn-primary" >Create Client</button>
        </div>
    </EditForm>
</div>


@code {
    ClientDb client = new ClientDb();

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    private async void Submit()
    {
        try
        {
            spinner.Show();
            int clientId = await clientService.SaveClient(client);
            client = await clientService.GetClientById(clientId);
            StateHasChanged();
            spinner.Hide();

            toaster.ShowSuccess("Client save successfully");
        }
        catch (Exception)
        {
            toaster.ShowError("Error occured on trying to save. Please try again");
            spinner.Hide();
        }
        
    }

}
