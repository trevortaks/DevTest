@page "/ViewContact/{contactId:int}"
@inject ContactService contactService
@inject SpinnerService spinner
@inject IToastService toastr

<div class="mt-4 mb-4">
    <button class="btn btn-outline-primary" @onclick="@ShowModal">Link Clients</button>
</div>
<TabControl>
    <TabPage Text="General">
        <EditForm Model="Contact">
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label>Name</label>
                        <InputText class="form-control" @bind-Value="Contact.Name" />
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label>Surname</label>
                        <InputText class="form-control" @bind-Value="Contact.EmailAddress" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label>Email Address</label>
                        <InputText class="form-control" @bind-Value="Contact.EmailAddress" />
                    </div>
                </div>
            </div>
        </EditForm>
    </TabPage>
    <TabPage Text="Contacts">
        <div class='mb-4'>
            <h3>Linked Contacts</h3>
        </div>
        @if (clients.Count < 1)
        {
            <h2>No Clients Found</h2>
        }
        else
        {
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Client Name</th>
                        <th>Client Code</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var client in clients)
                    {
                        <tr>
                            <td>@client.Name </td>
                            <td>@client.ClientCode</td>
                            <td><a href="" class="btn btn-primary btn-link">Unlink</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </TabPage>
</TabControl>

@code {
    [Parameter]
    public int contactId { get; set; }

    [CascadingParameter]
    public IModalService modalService { get; set; }

    public Contact Contact = new Contact();
    public List<ClientDto> clients = new List<ClientDto>();

    protected override async Task OnInitializedAsync()
    {
        spinner.Show();
        try
        {
            var response = await contactService.GetContactById(contactId);
            var result = await GetLinkedClients(contactId);
            if (!response?.Success ?? true && result)
            {
                spinner.Hide();
                toastr.ShowError(response?.Message ?? "Something went wrong");
                return;
            }

            Contact = response?.Content ?? new Contact();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            toastr.ShowError("Error occured on load. Please reload the page");
        }
        spinner.Hide();
        await base.OnInitializedAsync();
    }

    private async Task<bool> GetLinkedClients(int contactId)
    {
        var response = await contactService.GetContactClients(contactId);
        if (response == null) return false;
        if(response.Success){
            clients = response.Content;
            return true;
        }
        return false;
    }

    private async void ShowModal()
    {
        var parameters = new ModalParameters();
        parameters.Add("ContactId", contactId);
        var modal = modalService.Show<LinkClient>("", parameters);
        await modal.Result;
        if(!await GetLinkedClients(contactId)){
            toastr.ShowError("Failed to refresh data. Please reload page");
        }

    }
}
