@page "/Contacts"
@inject ContactService contactService

<h2>List of Clients</h2>

<div class="row">
    <div class="col-12 d-flex my-3">
        <a @onclick="AddNewContact" class="btn btn-outline-primary">Add New Contact </a>
    </div>
</div>

@if (_contacts.Count < 1)
{
    <h3>No contact(s) found</h3>
}
else
{
    <table class="table table-primary table-striped">
        <thead>
            <tr>
                <td>Full Name</td>
                <td>Email Address</td>
                <td>No. of linked clients</td>
                <td></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var contact in _contacts)
            {
                <tr>
                    <td>@contact.FullName</td>
                    <td>@contact.EmailAddress</td>
                    <td>@contact.LinkedClients</td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    [CascadingParameter] public IModalService modalService { get; set; } = default!;

    List<ContactDto> _contacts = new List<ContactDto>();

    protected override async Task OnInitializedAsync()
    {
        _contacts = await contactService.GetAllContactsWithClientCount();
        await base.OnInitializedAsync();
    }

    public async Task AddNewContact()
    {
        var modal = modalService.Show<AddContact>("Create new client");
        await modal.Result;
    }

}
