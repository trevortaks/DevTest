@page "/ViewClient/{clientId:int}"
@inject ClientService clientService
@inject SpinnerService spinner
@inject IToastService toaster

<h2>Client Details</h2>
<ul class="nav nav-tabs">
    <li class="nav-item">
        <a href="#general" @onclick:preventDefault class="nav-link cursor-pointer active" id="general-tab" data-toggle="tab" data-target="#general" role="tab" aria-controls="general" aria-selected="true">General</a>
    </li>
    <li class="nav-item">
        <a href="#contacts" @onclick:preventDefault class="nav-link cursor-pointer" id="contacts-tab" data-toggle="tab" data-target="#contacts" role="tab" aria-controls="general" aria-selected="true">Contacts</a>
    </li>
</ul>
<div class="tab-content" id="tabContent">
    <div class="tab-pane fade show active" id="general" role="tabpanel" aria-labelledby="general-tab">
        <EditForm Model="client">
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label>Client Code</label>
                        <InputText class="form-control" readonly @bind-Value="client.ClientCode"/>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label>Client Name</label>
                        <InputText class="form-control" @bind-Value="client.Name" />
                    </div>
                </div>
            </div>
        </EditForm>
        
    </div>
    <div class="tab-pane fade " id="contacts" role="tabpanel" aria-labelledby="contacts-tab">
        @if (contacts.Count < 1)
       {
           <h2>No Contact()s Found</h2>
       }
       else
       {
           <table class="table table-hover table-striped table-bordered">
               <thead class="thead-primary">
                   <tr>
                       <th>Contact Full Name</th>
                       <th>Contact email address</th>
                       <th></th>
                   </tr>
               </thead>
               <tbody>
                    @foreach (var contact in contacts)
                   {
                       <tr>
                           <td>@contact.Surname @contact.Name </td>
                           <td>@contact.EmailAddress</td>
                           <td><a href="" class="btn btn-primary btn-link">Unlink</a></td>
                       </tr>
                   }
               </tbody>
           </table>
       }
    </div>
</div>

@code {
    [Parameter]
    public int clientId { get; set; }

    public ClientDb client = new ClientDb();
    public List<Contact> contacts = new List<Contact>();

    protected override async Task OnInitializedAsync()
    {   try
        {
            spinner.Show();
            var response = await clientService.GetClientById(clientId);

            if (!response?.Success ?? true)
            {
                spinner.Hide();
                toaster.ShowError(response?.Message ?? "Something went wrong");
            }

            client = response?.Content ?? new ClientDb();
            spinner.Hide();
        }
        catch (Exception)
        {
            toaster.ShowError("An error occured on load.Please reload the page");
        }
        finally{
            spinner.Hide();
        }

        await base.OnInitializedAsync();
    }

    public async Task<string> GetClientContacts(int clientId)
    {
        var _contacts = await clientService.GetClientContacts(clientId);

        if (!_contacts?.Success ?? false)
        {
            return _contacts?.Message ?? "Failed to get linked contacts";
        }

        contacts = _contacts?.Content ?? new List<Contact>();
        return String.Empty;
    }
}
