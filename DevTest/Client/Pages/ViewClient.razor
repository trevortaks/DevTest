@page "/ViewClient/{clientId}"
@inject ClientService clientService
@inject SpinnerService spinner
@inject IToastService toaster

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active" href="#" id="general-tab">General</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#" id="contacts-tab">Contacts</a>
    </li>
</ul>
<div class="tab-content" id="tabContent">
    <div class="tab-pane fade show active" id="general" role="tabpanel" aria-labelledby="general-tab">
        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label>Client Code</label>
                    <InputText class="form-control" @bind-Value="client.ClientCode"/>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    <label>Client Name</label>
                    <InputText class="form-control" @bind-Value="client.Name" />
                </div>
            </div>
        </div>
        
    </div>
    <div class="tab-pane fade" id="contacts" role="tabpanel" aria-labelledby="contacts-tab">
        @if (contacts.Count < 1)
       {
           <h2>No Contacts Found</h2>
       }
       else
       {
           <table class="table table-striped table-bordered">
               <thead>
                   <tr>
                       <th>Contact Full Name</th>
                       <th>Contact email address</th>
                       <th></th>
                   </tr>
               </thead>
               <tbody>
                    @foreach (var contact in contacts)
                   {
                       <tr>
                           <td>@contact.Surname @contact.Name </td>
                           <td>@contact.EmailAddress</td>
                           <td><a href="" class="btn btn-primary btn-link">Unlink</a></td>
                       </tr>
                   }
               </tbody>
           </table>
       }
    </div>
</div>

@code {
    [Parameter]
    public int clientId { get; set; }

    public ClientDb client;
    public List<Contact> contacts = new List<Contact>();

    protected override async Task OnInitializedAsync()
    {   try
        {
            spinner.Show();
            client = await clientService.GetClientById(clientId);
            spinner.Hide();
        }
        catch (Exception)
        {
            toaster.ShowError("An error occured on load.Please reload the page");
        }
        finally{
            spinner.Hide();
        }
       
        await base.OnInitializedAsync();
    }
}
